

// ---------------------- Login Logic ----------------------
document.getElementById('loginForm')?.addEventListener('submit', function (e) {
  e.preventDefault();

  const email = document.getElementById('loginEmail').value.trim();
  const password = document.getElementById('loginPassword').value;

  signInWithEmailAndPassword(auth, email, password)
    .then(() => {
      alert("‡¶≤‡¶ó‡¶á‡¶® ‡¶∏‡¶´‡¶≤");
      window.location.href = "index.html";
    })
    .catch((error) => {
      alert("‡¶≤‡¶ó‡¶á‡¶® ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•: " + error.message);
    });
});


// üß† ‡¶´‡¶∞‡ßç‡¶Æ ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü
const registerForm = document.getElementById("registerForm");
const submitBtn = document.getElementById("submitBtn");

const nameInput = document.getElementById("name");
const emailInput = document.getElementById("email");
const passInput = document.getElementById("password");
const confirmInput = document.getElementById("confirmPassword");
const dobInput = document.getElementById("dob");
const genderInput = document.getElementById("gender");
const formMessage = document.getElementById("formMessage");

// ‚úÖ ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶Æ‡¶ø‡¶≤‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶¶‡ßá‡¶ñ‡ßá ‡¶∏‡¶æ‡¶¨‡¶Æ‡¶ø‡¶ü ‡¶¨‡¶æ‡¶ü‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü‡¶ø‡¶≠/‡¶°‡¶ø‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü‡¶ø‡¶≠ ‡¶ï‡¶∞‡¶æ
function validateForm() {
  const isValid =
    nameInput.value &&
    emailInput.value &&
    passInput.value.length >= 6 &&
    confirmInput.value === passInput.value &&
    dobInput.value &&
    genderInput.value;

  submitBtn.disabled = !isValid;
}

registerForm.addEventListener("input", validateForm);

// ‚úÖ ‡¶∏‡¶æ‡¶¨‡¶Æ‡¶ø‡¶ü ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü
registerForm.addEventListener("submit", async (e) => {
  e.preventDefault();

  const name = nameInput.value;
  const email = emailInput.value;
  const password = passInput.value;
  const dob = dobInput.value;
  const gender = genderInput.value;

  try {
    const userCredential = await createUserWithEmailAndPassword(auth, email, password);
    const user = userCredential.user;

    // ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü (‡¶®‡¶æ‡¶Æ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ)
    await updateProfile(user, {
      displayName: name
    });

    // Firestore-‡¶è ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£
    await setDoc(doc(db, "users", user.uid), {
      name,
      email,
      dob,
      gender,
      uid: user.uid,
      createdAt: new Date()
    });

    formMessage.style.color = "lightgreen";
    formMessage.innerText = "‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶∏‡¶´‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!";

    // ‡¶≤‡¶ó‡¶á‡¶® ‡¶™‡ßá‡¶á‡¶ú‡ßá ‡¶∞‡¶ø‡¶°‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶ü (‡ß© ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞)
    setTimeout(() => {
      window.location.href = "login.html";
    }, 3000);
  } catch (error) {
    formMessage.style.color = "red";
    formMessage.innerText = `‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: ${error.message}`;
  }
});
